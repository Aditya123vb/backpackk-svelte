import { c as create_ssr_component, r as onDestroy, e as escape, k as add_attribute } from "../../../chunks/ssr.js";
import "../../../chunks/history.js";
import "../../../chunks/client.js";
import "postcss";
const css = {
  code: ".gradient-text.svelte-y7nemd{font-size:x-large;background:linear-gradient(90deg, #ffffff 50%, #FF830F);-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text;text-fill-color:transparent}@media(max-width: 420px){.gradient-text.svelte-y7nemd{font-size:1.8rem}}.no-scrollbar.svelte-y7nemd{-ms-overflow-style:none;scrollbar-width:none}.scrollable-container.svelte-y7nemd{scroll-behavior:smooth}.scrollable-container.svelte-y7nemd::-webkit-scrollbar{width:12px}.scrollable-container.svelte-y7nemd::-webkit-scrollbar-thumb{background-color:rgba(0, 0, 0, 0.5);border-radius:10px}.scrollable-container.svelte-y7nemd{-webkit-overflow-scrolling:touch}.fade.svelte-y7nemd{transition-property:opacity;transition-duration:1000ms;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);opacity:0}.fade-active.svelte-y7nemd{opacity:1}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n    import { Checkbox } from 'flowbite-svelte';\\r\\n    import Resultcity from '../../components/resultcity.svelte'\\r\\n    import { fade } from 'svelte/transition';\\r\\n    import {onMount}  from 'svelte';\\r\\n    import { navigate } from 'svelte-routing';\\r\\nimport { goto } from '$app/navigation';\\r\\nimport { Spinner } from 'flowbite-svelte';\\r\\nimport { dataStore, updateText, addToList, removeFromList, updateNumber, resetStore } from '../../stores/param';\\r\\n\\r\\nlet quotes=[\\r\\n  {\\"quote\\": \\"The real voyage of discovery consists not in seeking new landscapes, but in having new eyes.\\", \\"author\\": \\"Marcel Proust\\"},\\r\\n  {\\"quote\\": \\"Traveling – it leaves you speechless, then turns you into a storyteller.\\", \\"author\\": \\"Ibn Battuta\\"},\\r\\n  {\\"quote\\": \\"To travel is to discover that everyone is wrong about other countries.\\", \\"author\\": \\"Aldous Huxley\\"},\\r\\n  {\\"quote\\": \\"The gladdest moment in human life is a departure into unknown lands.\\", \\"author\\": \\"Sir Richard Burton\\"},\\r\\n  {\\"quote\\": \\"We travel not to escape life, but for life not to escape us.\\", \\"author\\": \\"Anonymous\\"},\\r\\n  {\\"quote\\": \\"Wherever you go becomes a part of you somehow.\\", \\"author\\": \\"Anita Desai\\"},\\r\\n  {\\"quote\\": \\"Travel makes one modest. You see what a tiny place you occupy in the world.\\", \\"author\\": \\"Gustave Flaubert\\"},\\r\\n  {\\"quote\\": \\"Once a year, go someplace you’ve never been before.\\", \\"author\\": \\"Dalai Lama\\"},\\r\\n  {\\"quote\\": \\"A journey is best measured in friends, rather than miles.\\", \\"author\\": \\"Tim Cahill\\"},\\r\\n  {\\"quote\\": \\"Travel is never a matter of money but of courage.\\", \\"author\\": \\"Paulo Coelho\\"},\\r\\n  {\\"quote\\": \\"It is not down in any map; true places never are.\\", \\"author\\": \\"Herman Melville\\"},\\r\\n  {\\"quote\\": \\"The more I traveled, the more I realized fear makes strangers of people who should be friends.\\", \\"author\\": \\"Shirley MacLaine\\"},\\r\\n  {\\"quote\\": \\"To awaken quite alone in a strange town is one of the pleasantest sensations in the world.\\", \\"author\\": \\"Freya Stark\\"},\\r\\n  {\\"quote\\": \\"Better to see something once than hear about it a thousand times.\\", \\"author\\": \\"Asian Proverb\\"},\\r\\n  {\\"quote\\": \\"Travel is about the gorgeous feeling of teetering in the unknown.\\", \\"author\\": \\"Anthony Bourdain\\"},\\r\\n  {\\"quote\\": \\"Wanderlust: a strong desire or urge to wander or travel and explore the world.\\", \\"author\\": \\"Anonymous\\"},\\r\\n  {\\"quote\\": \\"The life you have led doesn’t need to be the only life you have.\\", \\"author\\": \\"Anna Quindlen\\"},\\r\\n  {\\"quote\\": \\"To travel is to take a journey into yourself.\\", \\"author\\": \\"Danny Kaye\\"},\\r\\n  {\\"quote\\": \\"Stop worrying about the potholes in the road and enjoy the journey.\\", \\"author\\": \\"Babs Hoffman\\"},\\r\\n  {\\"quote\\": \\"The goal is to die with memories, not dreams.\\", \\"author\\": \\"Anonymous\\"}\\r\\n]\\r\\n\\r\\nlet currentQuote = getRandomQuote();\\r\\n  let nextQuote = getRandomQuote();\\r\\n\\r\\n  function getRandomQuote() {\\r\\n    return quotes[Math.floor(Math.random() * quotes.length)];\\r\\n  }\\r\\n\\r\\n  function changeQuote() {\\r\\n    nextQuote = getRandomQuote();\\r\\n    setTimeout(() => {\\r\\n      currentQuote = nextQuote;\\r\\n      nextQuote = getRandomQuote();\\r\\n    }, 1000); // Time for fade-out and fade-in\\r\\n  }\\r\\n\\r\\n  // Change quote every 5 seconds\\r\\n  let interval = setInterval(changeQuote, 5000);\\r\\n\\r\\n  // Clean up interval when component is destroyed\\r\\n  import { onDestroy } from 'svelte';\\r\\n  onDestroy(() => {\\r\\n    clearInterval(interval);\\r\\n  });\\r\\nlet types=[];\\r\\nvar selectedPlaces = new Set();\\r\\nfunction handleAddItem(newItem) {\\r\\n    if (newItem.trim()) {\\r\\n      addToList(newItem.trim());\\r\\n      newItem = '';\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function handleRemoveItem(item) {\\r\\n    removeFromList(item);\\r\\n  }\\r\\nfunction togglePlaceSelection(button, place) {\\r\\n    console.log(\`Button clicked: \${place}\`); // Debugging line\\r\\n    const selectedDiv = document.getElementById('selected-places');\\r\\n    const defaultText = document.getElementById('default-text');\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   // Check if the place is already selected\\r\\n   if (selectedPlaces.has(place)) {\\r\\n                selectedPlaces.delete(place);\\r\\n                handleRemoveItem(place);\\r\\n                dataStore.subscribe(value => {\\r\\n  console.log('Text:', value.text);\\r\\n  console.log('List:', value.list);\\r\\n  console.log('Number:', value.number);\\r\\n})();\\r\\n                const elementToRemove = document.getElementById(\`place-\${place}\`);\\r\\n                selectedDiv.removeChild(elementToRemove);\\r\\n                \\r\\n\\r\\n            } else {\\r\\n                selectedPlaces.add(place);\\r\\n                handleAddItem(place);\\r\\n                dataStore.subscribe(value => {\\r\\n  console.log('Text:', value.text);\\r\\n  console.log('List:', value.list);\\r\\n  console.log('Number:', value.number);\\r\\n})();\\r\\n\\r\\n                const placeBox = document.createElement('div');\\r\\n                placeBox.className = 'border border-gray-500 rounded-full px-3 py-1 text-white text-sm';\\r\\n                placeBox.id = \`place-\${place}\`;\\r\\n                placeBox.textContent = place;\\r\\n                selectedDiv.appendChild(placeBox);\\r\\n            }\\r\\n\\r\\n    // Show or hide the default text based on selection\\r\\n    if (selectedPlaces.size === 0) {\\r\\n                defaultText.classList.remove('hidden');\\r\\n            } else {\\r\\n                defaultText.classList.add('hidden');\\r\\n            }\\r\\n}\\r\\n\\r\\n\\r\\nfunction getDatesBetween(startDateStr, endDateStr) {\\r\\n  // Helper function to parse a date string in the format \\"DD MMM\\"\\r\\n  function parseDate(dateStr, year) {\\r\\n    const [day, month] = dateStr.split(' ');\\r\\n    const monthIndex = new Date(Date.parse(month + \\" 1, 2021\\")).getMonth(); // Get month index from month name\\r\\n    return new Date(year, monthIndex, parseInt(day, 10));\\r\\n  }\\r\\n\\r\\n  // Helper function to format a Date object into \\"DD MMM\\" format\\r\\n  function formatDate(date) {\\r\\n    const day = date.getDate().toString().padStart(2, '0');\\r\\n    const month = date.toLocaleString('default', { month: 'short' });\\r\\n    return \`\${day} \${month}\`;\\r\\n  }\\r\\n\\r\\n  const year = new Date().getFullYear(); // Use current year\\r\\n  const startDate = parseDate(startDateStr, year);\\r\\n  const endDate = parseDate(endDateStr, year);\\r\\n\\r\\n  // Ensure endDate is after startDate\\r\\n  if (endDate < startDate) {\\r\\n    return []; // Return empty array if endDate is before startDate\\r\\n  }\\r\\n\\r\\n  // Generate dates between startDate and endDate\\r\\n  const dates = [];\\r\\n  let currentDate = new Date(startDate);\\r\\n\\r\\n  while (currentDate <= endDate) {\\r\\n    dates.push(formatDate(currentDate));\\r\\n    currentDate.setDate(currentDate.getDate() + 1);\\r\\n  }\\r\\n\\r\\n  return dates;\\r\\n}\\r\\n\\r\\nlet dates = [];\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n  \\r\\n    let isLoading = false;\\r\\n    let result;\\r\\n    let resultfirstdict= []\\r\\n    let cityname='';\\r\\n    let city='';\\r\\n    let days=0;\\r\\n    onMount(()=>{\\r\\n      function getToken() {\\r\\n    return localStorage.getItem('authToken');\\r\\n}\\r\\n  const token = getToken();\\r\\n        let formData ={\\r\\n            city_name: '',\\r\\n            place_types: [],\\r\\n            no_of_days: 0\\r\\n        }\\r\\n        if (!token) {\\r\\n            // If no token, redirect to login\\r\\n            goto('/login');\\r\\n        } else {\\r\\n            // Optionally, validate the token with your backend\\r\\n            validateToken(token);\\r\\n        }\\r\\n        dataStore.subscribe(value => {\\r\\n        if(value.text=='Initial Text'){\\r\\n            goto('/parameters/cityname')\\r\\n        } else if (value.number==0){\\r\\n            goto('/parameters/dates')\\r\\n        }\\r\\n        else if(value.list.length==0){\\r\\n          goto('/parameters/types')\\r\\n        }\\r\\n        else{\\r\\n          formData.city_name = value.text;\\r\\n          cityname= formData.city_name;\\r\\n          city= formData.city_name;\\r\\n          formData.place_types = value.list;\\r\\n          types = formData.place_types;\\r\\n          formData.no_of_days = Math.floor(value.number);\\r\\n          days= formData.no_of_days;\\r\\n          console.log(typeof formData.place_types)\\r\\n          console.log(JSON.stringify(formData))\\r\\n          getplaces()\\r\\n          dates = getDatesBetween(value.start, value.end)\\r\\n\\r\\n\\r\\n         \\r\\n        }\\r\\n        function createnew(){\\r\\n          updateText(cityname);\\r\\n        }\\r\\n      \\r\\n    })();\\r\\n\\r\\n    async function getplaces() {\\r\\n      try{\\r\\n        isLoading = true; \\r\\n\\r\\n    const response = await fetch('http://127.0.0.1:8000/tripgenerator',{\\r\\n      \\r\\n      \\r\\n    method:'POST',\\r\\n    headers: {\\r\\n       'Content-Type': 'application/json',\\r\\n         'Authorization': \`Bearer \${token}\`,\\r\\n          'Connection':'keep-alive'\\r\\n    },\\r\\n    body: JSON.stringify(\\r\\n              formData\\r\\n    )\\r\\n  });\\r\\n  if(response.ok){\\r\\n    result = await response.json();\\r\\n    console.log(result)\\r\\n   \\r\\n  }\\r\\n  else{\\r\\n    const result = await response.json()\\r\\n    \\r\\n  }\\r\\n\\r\\n  }\\r\\n  catch (error){\\r\\n    console.error('Network error:',error);\\r\\n  }finally {\\r\\n            isLoading = false; // Hide loading screen\\r\\n        }\\r\\n      \\r\\n    }\\r\\n\\r\\n\\r\\n         \\r\\n});\\r\\n\\r\\nasync function validateToken(token) {\\r\\n        try {\\r\\n            const response = await fetch('http://127.0.0.1:8000/users/me', {\\r\\n                method: 'GET',\\r\\n                headers: {\\r\\n                    'Authorization': \`Bearer \${token}\`\\r\\n                }\\r\\n            });\\r\\n\\r\\n            if (!response.ok) {\\r\\n                throw new Error('Token validation failed');\\r\\n            }\\r\\n\\r\\n            // If valid, proceed\\r\\n        } catch (error) {\\r\\n            console.error('Invalid token', error);\\r\\n            goto('/login');\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    let isDialogOpen = false;\\r\\n\\r\\n\\r\\n                  \\r\\n    function toggleDialog() {\\r\\n        isDialogOpen = !isDialogOpen;\\r\\n    }\\r\\n\\r\\n    let it=0\\r\\n    function handleit(){\\r\\n      it = it+1;\\r\\n    }\\r\\nlet checked= false;\\r\\nfunction checkbox(place){\\r\\n  \\r\\n  return types.includes(place)\\r\\n\\r\\n}\\r\\nlet key=1\\r\\nfunction pageref(){\\r\\n  key+=1\\r\\n}\\r\\n\\r\\nfunction createnew(){\\r\\n  updateText(cityname);\\r\\n goto('/itinerary/intermediate')\\r\\n}\\r\\n\\r\\n    <\/script>\\r\\n\\r\\n\\r\\n<body class=\\"w-full flex-col overflow-y-scroll no-scrollbar pl-2 pr-2 md:pl-6 md:pr-4 xl:pl-8 xl:pr-12 bg-[#1b1b1b] h-screen mb-24 justify-center\\">\\r\\n\\r\\n  {#if isLoading}\\r\\n  <div class=\\"fixed inset-0 flex flex-col items-center justify-center bg-[#1b1b1b] space-y-3 bg-opacity-100 z-50\\">\\r\\n    <!-- Content container to ensure proper spacing -->\\r\\n    \\r\\n      <!-- Loading text and spinner on top -->\\r\\n      <div class=\\"text-white text-2xl mb-4 flex flex-row space-x-3\\">\\r\\n        Crafting your itinerary...\\r\\n        <Spinner />\\r\\n      </div>\\r\\n      \\r\\n      \\r\\n      <!-- Quote container beneath the spinner -->\\r\\n      <div class=\\"flex items-center justify-center mt-12\\">\\r\\n        <div class=\\"text-white text-base max-w-lg mx-4\\">\\r\\n          <div class=\\"relative\\">\\r\\n            <!-- Quote container with fading effect -->\\r\\n            <div class=\\"fade fade-active\\">\\r\\n              {currentQuote.quote}\\r\\n              <div class=\\"text-base mt-2\\">— {currentQuote.author}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    \\r\\n  </div>\\r\\n  {/if}\\r\\n    \\r\\n        <div class=\\"flex w-full  justify-center \\">\\r\\n            <p class=\\"gradient-text\\">{days} day trip to {city}</p>\\r\\n            </div>\\r\\n            <div class=\\" flex flex-row  gap-x-0 sm:gap-x-0 lg:gap-x-10   mt-5 w-full\\">\\r\\n               \\r\\n                  \\r\\n                <div>\\r\\n                    <!-- Sidebar (Visible on desktop) -->\\r\\n                    <div class=\\"hidden lg:flex flex-col w-max\\">\\r\\n                      <div class=\\"bg-[#2C3036] w-max rounded-3xl\\">\\r\\n                        <input \\r\\n                          class=\\"bg-transparent border-transparent focus:border-transparent focus:outline-none focus-within:ring-0 w-3/4 md:w-5/6 sm:w-3/4 h-12 rounded-3xl p-4 text-white text-sm\\"\\r\\n                          type=\\"text\\"\\r\\n                          placeholder={cityname}\\r\\n                          bind:value={cityname}\\r\\n                        />\\r\\n                      </div>\\r\\n                      \\r\\n                      <ul class=\\"w-full mt-10 bg-[#2C3036] rounded-xl border border-gray-800 divide-y divide-transparent\\">\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'tourist_attraction')}>Tourist Attraction</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'museum')}>Museum</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'zoo')}>Zoo</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'night_club')}>Night Club</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'bar')}>Bar</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'hindu_temple')}>Hindu Temple</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'mosque')}>Mosque</label>\\r\\n                        </li>\\r\\n                        <li class=\\"flex items-center m-5\\">\\r\\n                          <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                          <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'church')}>Church</label>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                      <button \\r\\n                        class=\\"w-full mt-5 h-10 bg-[#FF830F] text-xs rounded-xl hover:bg-[#FF9900] hover:scale-105 active:bg-[#FF6600] active:scale-95 transition duration-300 ease-in-out\\"\\r\\n                      on:click={createnew}>\\r\\n                        Create New\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  \\r\\n                   \\r\\n                    <button \\r\\n                      on:click={toggleDialog}\\r\\n                      class=\\"fixed bottom-6 right-6 bg-[#FF830F] text-white p-4 rounded-full shadow-lg hover:bg-orange-400 focus:outline-none lg:hidden z-20\\"\\r\\n                    >\\r\\n                    ≣\\r\\n                      <p>Create New</p>\\r\\n                    </button>\\r\\n                    \\r\\n                  \\r\\n                   \\r\\n                    {#if isDialogOpen}\\r\\n                      <div \\r\\n                        class=\\"fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50 lg:hidden\\"\\r\\n                        on:click={toggleDialog}  \\r\\n                        transition:fade={{ duration: 300 }}\\r\\n                      >\\r\\n                        <div \\r\\n                          on:click|stopPropagation \\r\\n                          class=\\"relative bg-[#1b1b1b] p-8 rounded-lg w-full h-full max-w-full max-h-full overflow-auto transition-opacity duration-300 ease-in-out\\"\\r\\n                          transition:fade={{ duration: 300 }}\\r\\n                        >\\r\\n                          <!-- Close Button -->\\r\\n                          <div class=\\"w-full justify-end flex\\">\\r\\n                            <button \\r\\n                            on:click={toggleDialog} \\r\\n                            class=\\" text-gray-700 hover:text-gray-900 text-8xl\\"\\r\\n                          >\\r\\n                            &times;\\r\\n                          </button>\\r\\n                            </div>\\r\\n                          \\r\\n                          <!-- Dialog Content -->\\r\\n                          <div class=\\"flex mt-5 flex-col w-full\\">\\r\\n                            <div class=\\"bg-[#2C3036] w-full rounded-3xl mb-6\\">\\r\\n                              <input \\r\\n                                class=\\"bg-transparent border-transparent focus:border-transparent focus:outline-none focus-within:ring-0 w-3/4 md:w-5/6 sm:w-3/4 h-12 rounded-3xl p-4 text-white text-sm\\"\\r\\n                                type=\\"text\\"\\r\\n                                placeholder={cityname}\\r\\n                                bind:value={cityname}\\r\\n                              />\\r\\n                            </div>\\r\\n                          \\r\\n                            <ul class=\\"w-full bg-[#2C3036] rounded-xl border border-gray-800 divide-y divide-transparent\\">\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'tourist_attraction')}>Tourist Attraction</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'museum')}>Museum</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'zoo')}>Zoo</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'night_club')}>Night Club</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'bar')}>Bar</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'hindu_temple')}>Hindu Temple</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'mosque')}>Mosque</label>\\r\\n                              </li>\\r\\n                              <li class=\\"flex items-center m-5\\">\\r\\n                                <input id=\\"default-checkbox\\" type=\\"checkbox\\" value=\\"\\" class=\\"w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 \\">\\r\\n                                <label for=\\"default-checkbox\\" class=\\"ms-2 text-sm font-medium text-white dark:text-white\\"on:click={()=>togglePlaceSelection(this, 'church')}>Church</label>\\r\\n                              </li>\\r\\n                              \\r\\n                            </ul>\\r\\n                            \\r\\n                            <button \\r\\n                              class=\\"w-full mt-5 h-10 bg-[#FF830F] text-xs rounded-xl hover:bg-[#FF9900] hover:scale-105 active:bg-[#FF6600] active:scale-95 transition duration-300 ease-in-out\\"\\r\\n                              on:click={createnew}>\\r\\n                              Create New\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    {/if}\\r\\n                  </div>\\r\\n                  \\r\\n              {#if result}\\r\\n                  <div class=\\"flex flex-col   h-full w-full gap-y-8 \\">\\r\\n                    <!-- Scrollable Container -->\\r\\n                   \\r\\n                    {#each Object.entries(result) as [keyy, value], it}\\r\\n                    {#if typeof value === 'object' && value !== null}\\r\\n                    <div class=\\"scrollable-container w-full h-48 sm:h-42 lg:h-60 p-2 sm:p-2 lg:p-5 bg-[#2C3036] rounded-2xl gap-x-7 sm:gap-x-7 lg:gap-x-10 flex flex-row overflow-auto no-scrollbar \\">\\r\\n                      <div class=\\"flex flex-col gap-y-3 w-max h-full justify-center\\">\\r\\n                        <p class=\\"text-white text-xl\\">\\r\\n                          {keyy}\\r\\n                        </p>\\r\\n                        <p class=\\"text-[#868686] text-sm\\">\\r\\n                          {dates.at(it)}\\r\\n                        </p>\\r\\n                      </div>\\r\\n                      <!-- Resultcity components -->\\r\\n                      {#each Object.keys(value.Name) as i}\\r\\n                      <Resultcity \\r\\n                        place={value.Name[i]} \\r\\n                        rating={value.rating[i]}\\r\\n                        photoName={value.photos[i] ? value.photos[i][0] : null}\\r\\n                        \\r\\n                      />\\r\\n                      {/each}\\r\\n                    </div>\\r\\n                    {/if}\\r\\n                    {/each}\\r\\n                    \\r\\n                  </div>\\r\\n\\r\\n                  {/if}\\r\\n                  \\r\\n                  \\r\\n                  \\r\\n                      \\r\\n                </div>\\r\\n        \\r\\n\\r\\n\\r\\n    </body>\\r\\n\\r\\n    <style lang=\\"postcss\\">\\r\\n        .gradient-text {\\r\\n         font-size: x-large;\\r\\nbackground: linear-gradient(90deg, #ffffff 50%, #FF830F);\\r\\n-webkit-background-clip: text;\\r\\n-webkit-text-fill-color: transparent;\\r\\nbackground-clip: text;\\r\\ntext-fill-color: transparent;    \\r\\n}\\r\\n@media (max-width: 420px) {\\r\\n.gradient-text{\\r\\nfont-size: 1.8rem; \\r\\n}\\r\\n}\\r\\n.no-scrollbar {\\r\\n-ms-overflow-style: none; \\r\\nscrollbar-width: none;  \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/* Add bounce effect */\\r\\n.scrollable-container {\\r\\n      scroll-behavior: smooth;\\r\\n    }\\r\\n\\r\\n    .scrollable-container::-webkit-scrollbar {\\r\\n      width: 12px;\\r\\n    }\\r\\n\\r\\n    .scrollable-container::-webkit-scrollbar-thumb {\\r\\n      background-color: rgba(0, 0, 0, 0.5);\\r\\n      border-radius: 10px;\\r\\n    }\\r\\n\\r\\n    /* Bounce effect for iOS */\\r\\n    .scrollable-container {\\r\\n      -webkit-overflow-scrolling: touch;\\r\\n    }\\r\\n\\r\\n    .fade {\\r\\n         transition-property: opacity;\\r\\n         transition-duration: 1000ms;\\r\\n         transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\\r\\n    opacity: 0;    \\r\\n}\\r\\n  .fade-active {\\r\\n         opacity: 1;    \\r\\n}\\r\\n</style>"],"names":[],"mappings":"AA4gBQ,4BAAe,CACd,SAAS,CAAE,OAAO,CAC3B,UAAU,CAAE,gBAAgB,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CACxD,uBAAuB,CAAE,IAAI,CAC7B,uBAAuB,CAAE,WAAW,CACpC,eAAe,CAAE,IAAI,CACrB,eAAe,CAAE,WACjB,CACA,MAAO,YAAY,KAAK,CAAE,CAC1B,4BAAc,CACd,SAAS,CAAE,MACX,CACA,CACA,2BAAc,CACd,kBAAkB,CAAE,IAAI,CACxB,eAAe,CAAE,IACjB,CAKA,mCAAsB,CAChB,eAAe,CAAE,MACnB,CAEA,mCAAqB,mBAAoB,CACvC,KAAK,CAAE,IACT,CAEA,mCAAqB,yBAA0B,CAC7C,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,IACjB,CAGA,mCAAsB,CACpB,0BAA0B,CAAE,KAC9B,CAEA,mBAAM,CACD,mBAAmB,CAAE,OAAO,CAC5B,mBAAmB,CAAE,MAAM,CAC3B,0BAA0B,CAAE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC7D,OAAO,CAAE,CACb,CACE,0BAAa,CACN,OAAO,CAAE,CAClB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  function changeQuote() {
    setTimeout(
      () => {
      },
      1e3
    );
  }
  let interval = setInterval(changeQuote, 5e3);
  onDestroy(() => {
    clearInterval(interval);
  });
  let cityname = "";
  let city = "";
  let days = 0;
  $$result.css.add(css);
  return `<body class="w-full flex-col overflow-y-scroll no-scrollbar pl-2 pr-2 md:pl-6 md:pr-4 xl:pl-8 xl:pr-12 bg-[#1b1b1b] h-screen mb-24 justify-center svelte-y7nemd">${``} <div class="flex w-full justify-center "><p class="gradient-text svelte-y7nemd">${escape(days)} day trip to ${escape(city)}</p></div> <div class="flex flex-row gap-x-0 sm:gap-x-0 lg:gap-x-10 mt-5 w-full"><div> <div class="hidden lg:flex flex-col w-max"><div class="bg-[#2C3036] w-max rounded-3xl"><input class="bg-transparent border-transparent focus:border-transparent focus:outline-none focus-within:ring-0 w-3/4 md:w-5/6 sm:w-3/4 h-12 rounded-3xl p-4 text-white text-sm" type="text"${add_attribute("placeholder", cityname, 0)}${add_attribute("value", cityname, 0)}></div> <ul class="w-full mt-10 bg-[#2C3036] rounded-xl border border-gray-800 divide-y divide-transparent"><li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-1u0sb6n">Tourist Attraction</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-18yua7s">Museum</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-1th61am">Zoo</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-1brkefb">Night Club</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-59gyhg">Bar</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-7z7wt7">Hindu Temple</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-17t6fjw">Mosque</label></li> <li class="flex items-center m-5"><input id="default-checkbox" type="checkbox" value="" class="w-4 h-4 text-orange-600 bg-gray-100 border-gray-300 rounded focus:ring-orange-500 "> <label for="default-checkbox" class="ms-2 text-sm font-medium text-white dark:text-white" data-svelte-h="svelte-gss80s">Church</label></li></ul> <button class="w-full mt-5 h-10 bg-[#FF830F] text-xs rounded-xl hover:bg-[#FF9900] hover:scale-105 active:bg-[#FF6600] active:scale-95 transition duration-300 ease-in-out" data-svelte-h="svelte-6dw1se">Create New</button></div> <button class="fixed bottom-6 right-6 bg-[#FF830F] text-white p-4 rounded-full shadow-lg hover:bg-orange-400 focus:outline-none lg:hidden z-20" data-svelte-h="svelte-jqoyev">≣
                      <p>Create New</p></button> ${``}</div> ${``}</div> </body>`;
});
export {
  Page as default
};
